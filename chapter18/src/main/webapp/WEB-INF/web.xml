<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
		 http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd"
         version="3.1">
    <!--摆放顺序-->
    <!--http://blog.sina.com.cn/s/blog_3e8e262b0100u5cz.html-->
    <!--"?"表示该标签出现次数最多为1，"*"表示可以多次出现-->
    <!--1. icon?-->
    <!--2. display-name?-->
    <display-name>chapter18</display-name>
    <!--3. description?-->
    <description>小春论坛</description>
    <!--4. distributable?-->
    <!--5. context-param*-->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:/applicationContext.xml</param-value>
    </context-param>
    <!--6. filter*-->

    <!--7. filter-mapping*-->

    <!--8. listener*-->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <!--9. servlet*-->
    <!--<servlet>
        &lt;!&ndash;SpringMVC 默认会加载<servlet-Name>-servlet.xml
            但是若通过<init-param>配置参数：
            1、namespace:若配置namespace为sample,则加载WEB-INF/sample.xml
            2、publishContext:boolean 若为true，则表示吧WebApplicationContext发布到ServletContext的属性列表中
                通过DispatcherServlet#getServletContextAttributeName()方法返回值
            3、publishEvents:boolean 默认为true，表示当DispatcherServlet处理完一个请求后，是否需要想容器发布一个ServletRequestHandledEvent事件
                若容器中没有任何事件监听器，则可以将该属性设置为false，以便提高运行性能&ndash;&gt;

        <servlet-name>chapter18</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        &lt;!&ndash;默认加载的文件是，chapter17-servlet.xml&ndash;&gt;
        <init-param>
            <param-name>contextConfigLocation</param-name>
            &lt;!&ndash;什么都不写表示使用context-param中的配置&ndash;&gt;
            <param-value>classpath:/chapter17-servlet.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
        &lt;!&ndash; springmvc的异步支持 &ndash;&gt;
        <async-supported>true</async-supported>
    </servlet>-->
    <!--10.servlet-mapping*-->
    <!--<servlet-mapping>
        <servlet-name>chapter17</servlet-name>
        <url-pattern>*.html</url-pattern>
    </servlet-mapping>
    <servlet-mapping>
        <servlet-name>chapter17</servlet-name>
        <url-pattern>/a/</url-pattern>
    </servlet-mapping>-->
    <!--下面的配置需要对静态资源进行处理,使用rest风格编程-->
    <!--<servlet-mapping>
        <servlet-name>chapter18</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>-->
    <!--11.session-config?-->
    <!--12.mime-mapping*-->
    <!--13.welcome-file-list?-->
    <welcome-file-list>
        <welcome-file>index.jsp</welcome-file>
    </welcome-file-list>
    <!--14.error-page*-->
    <!--<error-page>
        <error-code>404</error-code>
        <location>/404.htm</location>
    </error-page>-->
    <!--15.taglib*-->
    <!--16.resource-env-ref*-->
    <!--17.resource-ref*-->
    <!--18.security-constraint*-->
    <!--19.login-config?-->
    <!--20.security-role*-->
    <!--21.env-entry*-->
</web-app>

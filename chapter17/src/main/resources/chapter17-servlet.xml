<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:mvc="http://www.springframework.org/schema/mvc"
       xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc.xsd">
    <context:component-scan base-package="com.smart.chapter17.web"/>
    <!--这个一定要填写,该标签会创建并注册一个默认的DefaultAnnotationHandlerMapping和一个RequestMappingHandlerAdapter-->
    <!--除此之外，该标签会注册一个默认的ConversionService,即FormattingConversionServiceFactoryBean-->
    <!--The DispatcherServlet configuration needs to include a HandlerAdapter that supports this handler-->
    <!--会默认装配org.springframework.validation.beanvalidation.LocalValidDatorFactoryBean-->
    <mvc:annotation-driven >
        <!--<mvc:message-converters>
            &lt;!&ndash;默认四个&ndash;&gt;
            &lt;!&ndash;<bean class="org.springframework.http.converter.StringHttpMessageConverter">
                <property name="writeAcceptCharset" value="false"/>
            </bean>
            <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>
            <bean class="org.springframework.http.converter.xml.SourceHttpMessageConverter"/>
            <bean class="org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter"/>&ndash;&gt;
            &lt;!&ndash;新增&ndash;&gt;
            &lt;!&ndash;<bean class="org.springframework.http.converter.BufferedImageHttpMessageConverter"/>&ndash;&gt;
            &lt;!&ndash;处理xml格式的请求或相应信息&ndash;&gt;
            <bean class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
                <property name="marshaller" ref="xmlMarshaller"/>
                <property name="unmarshaller" ref="xmlMarshaller"/>
            </bean>
            &lt;!&ndash;处理json格式的请求或相应消息&ndash;&gt;
            <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
        </mvc:message-converters>-->
    </mvc:annotation-driven>
    <!--<mvc:default-servlet-handler/>-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
        <property name="prefix" value="/WEB-INF/views/"/>
        <property name="suffix" value=".jsp"/>
    </bean>

    <!--RequestMappingHandlerAdapter，默认有四个MessageConverter-->
    <!--若需要装配其他类型的HttpMessageConverter，如下。如果再配置文件中显示的定义了RequestMappingHandlerAdapter则springMVC会覆盖默认的RequestMappingHandlerAdapter-->
    <bean class="org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <!--<property name="messageConverters">
            <list>
                &lt;!&ndash;默认四个&ndash;&gt;
                <bean class="org.springframework.http.converter.StringHttpMessageConverter">
                    <property name="writeAcceptCharset" value="false"/>
                </bean>
                <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter"/>
                <bean class="org.springframework.http.converter.xml.SourceHttpMessageConverter"/>
                <bean class="org.springframework.http.converter.support.AllEncompassingFormHttpMessageConverter"/>
                &lt;!&ndash;新增&ndash;&gt;
                <bean class="org.springframework.http.converter.BufferedImageHttpMessageConverter"/>
                &lt;!&ndash;处理xml格式的请求或相应信息&ndash;&gt;
                <bean class="org.springframework.http.converter.xml.MarshallingHttpMessageConverter">
                    <property name="marshaller" ref="xmlMarshaller"/>
                    <property name="unmarshaller" ref="xmlMarshaller"/>
                </bean>
                &lt;!&ndash;处理json格式的请求或相应消息&ndash;&gt;
                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter"/>
            </list>
        </property>-->
        <property name="webBindingInitializer">
            <bean class="com.smart.chapter17.web.MyBindingInitializer"/>
        </property>
    </bean>
    <!--声明Marshaller，使用XStream技术-->
    <bean id="xmlMarshaller" class="org.springframework.oxm.xstream.XStreamMarshaller">
        <property name="streamDriver">
            <!--使用STAX对xml消息进行处理，STAX占用内存少，相应速度也很快-->
            <bean class="com.thoughtworks.xstream.io.xml.StaxDriver"/>
        </property>
        <!--使用XStream的注解定义xml转换规则，使用XStream注解的类在此声明-->
        <property name="annotatedClasses">
            <list>
                <value>com.smart.chapter17.domain.User</value>
            </list>
        </property>
    </bean>

    <!--Conversions-->
    <!--org.springframework.context.support.ConversionServiceFactoryBean-->
    <bean id="conversionService" class="org.springframework.format.support.FormattingConversionServiceFactoryBean">
        <property name="converters">
            <set>
                <bean class="com.smart.chapter17.domain.StringToUserConverter"/>
            </set>
        </property>
    </bean>

    <!--<bean id="contentNegotiationManager"
          class="org.springframework.web.accept.ContentNegotiationManagerFactoryBean"
          p:ignoreAcceptHeader="true"
          p:favorPathExtension="false"
          p:favorParameter="true"
          p:parameterName="format"
          p:defaultContentType="text/html">
        <property name="mediaTypes">
            <value>
                html=text/html
                xml=application/xml
                json=application/json
            </value>
        </property>
    </bean>-->
</beans>